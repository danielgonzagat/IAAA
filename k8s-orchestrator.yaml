apiVersion: v1
kind: ConfigMap
metadata: { name: orchestrator-config }
data:
  default.yaml: |
    orchestrator:
      max_workers: 4
      heartbeat_interval: "10s"
    guards:
      lyapunov: { vdot_max: 0.0 }
      autopoiesis: { oci_min: 0.6 }
      uncertainty: { band: [0.3, 0.7] }
    budgets:
      gpu_mem_gb: 24
      tokens_per_min: 120000
      usd_per_hour: 10
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: orchestrator }
spec:
  replicas: 1
  selector: { matchLabels: { app: orchestrator } }
  template:
    metadata: { labels: { app: orchestrator } }
    spec:
      containers:
      - name: orchestrator
        image: ghcr.io/danielgonzagat/iaaa-orchestrator:latest
        ports: [{ containerPort: 8000 }]
        env: [{ name: LEM_CONFIG, value: /app/configs/default.yaml }]
        readinessProbe: { httpGet: { path: /ready, port: 8000 }, initialDelaySeconds: 2, periodSeconds: 5 }
        livenessProbe:  { httpGet: { path: /live,  port: 8000 }, initialDelaySeconds: 5, periodSeconds: 10 }
        resources:
          requests: { cpu: "100m", memory: "128Mi" }
          limits:   { cpu: "500m", memory: "512Mi" }
        volumeMounts:
          - name: cfg
            mountPath: /app/configs
            readOnly: true
      volumes:
        - name: cfg
          configMap: { name: orchestrator-config }
---
apiVersion: v1
kind: Service
metadata: { name: orchestrator }
spec:
  selector: { app: orchestrator }
  ports:
    - name: http
      port: 80
      targetPort: 8000
